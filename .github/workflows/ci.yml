name: Tests

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RISC0_EXECUTOR: ipc

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          # - beta
          # - nightly
    steps:
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      # For keyring dependencies
      - run: sudo apt install libdbus-1-dev pkg-config

      - name: Cache Docker layers
        id: image-cache
        uses: actions/cache@v4
        with:
          path: ~/image-cache
          key: image-cache-${{ runner.os }}

      - if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/image-cache
          docker pull postgres:17-alpine
          docker save -o ~/image-cache/postgres.tar postgres:17-alpine

      - if: steps.image-cache.outputs.cache-hit == 'true'
        run: docker load -i ~/image-cache/postgres.tar

      - uses: taiki-e/install-action@nextest
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install r0vm
        run: |
          wget https://github.com/risc0/risc0/releases/download/v1.2.0/cargo-risczero-x86_64-unknown-linux-gnu.tgz
          tar xzvf cargo-risczero-x86_64-unknown-linux-gnu.tgz
          echo "$PWD" >> $GITHUB_PATH
      - run: cargo build --verbose
      - run: cargo nextest run --profile ci --workspace
      - run: cargo test --doc
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/nextest/ci/junit.xml
  coverage:
    name: Unit tests coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          # - beta
          # - nightly
    steps:
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      # For keyring dependencies
      - run: sudo apt install libdbus-1-dev pkg-config
      - name: Install r0vm
        run: |
          wget https://github.com/risc0/risc0/releases/download/v1.2.0/cargo-risczero-x86_64-unknown-linux-gnu.tgz
          tar xzvf cargo-risczero-x86_64-unknown-linux-gnu.tgz
          echo "$PWD" >> $GITHUB_PATH
      - name: Generate code coverage
        run: cargo llvm-cov --workspace --lib --lcov --output-path lcov.info -- --test-threads=1
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
  features_flags:
    name: Build with different feature flags
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          # - beta
          # - nightly
    steps:
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      # For keyring dependencies
      - run: sudo apt install libdbus-1-dev pkg-config
      - name: Build model
        run: cargo build -p hyle-model --no-default-features
      - name: Build
        run: cargo build --no-default-features
      - name: Build with sp1
        run: cargo build --no-default-features -F sp1
  unused_dependencies:
    name: Check unused dependencies
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Machete
        uses: bnjbvr/cargo-machete@v0.7.1
