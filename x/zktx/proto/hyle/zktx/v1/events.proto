syntax = "proto3";
package hyle.zktx.v1;

option go_package = "github.com/hyle-org/hyle/x/zktx";

// EventPayload is an event emitted for each payload processed in a transaction
message EventPayload {
  // contract_name is the name of the target contract
  string contract_name = 1;
  // Arbitrary data of the payload
  bytes data = 2;
  // Index of the payload in the tx
  uint32 payload_index = 3;
}

// EventPayloadSettled is emitted when a payload is settled
message EventPayloadSettled {
  // contract_name is the name of the target contract
  string contract_name = 1;
  // TX hash of the payload
  bytes tx_hash = 2;
  // Index of the payload in the tx
  uint32 payload_index = 3;
}

// EventTxSettled is emitted when a full transaction is settled
message EventTxSettled {
  // TX hash of the payload
  bytes tx_hash = 1;
  // Success or failure of the TX
  bool success = 2;
}

// EventContractRegistered is an event emitted when a contract is registered
message EventContractRegistered {
  // contract_name is the name of the contract
  string contract_name = 1;
}
