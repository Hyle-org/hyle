syntax = "proto3";
package hyle.hyle.zktx.v1;

option go_package = "github.com/hyle/hyle/zktx";

import "hyle/hyle/zktx/v1/types.proto";
import "google/api/annotations.proto";
import "cosmos/query/v1/query.proto";
import "amino/amino.proto";
import "gogoproto/gogo.proto";

// Msg defines the module Msg service.
service Query {
  // Contract returns the current state of the contract.
  rpc Contract(ContractRequest) returns (ContractResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get =
        "/hyle/hyle/zktx/v1/contract/{contract_name}";
  }

  // Params returns the module parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/hyle/hyle/zktx/v1/params";
  }
}

// ContractRequest is the request type for the Query/Contract RPC
message ContractRequest {
  // contract_name defines the name to query for the contract.
  string contract_name = 1;
}

// ContractResponse is the response type for the Query/Contract RPC
message ContractResponse {
  // contract defines the current state of the contract.
  hyle.zktx.v1.Contract contract = 1 [ (gogoproto.nullable) = false ];
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}
