[package]
name = "hyle-hydentity"
description = "Hyle Smart Contract"
version = { workspace = true }
edition = { workspace = true }
# license = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
rust-version = "1.81"

[[bin]]
name = "hydentity"
path = "src/main.rs"
required-features = ["risc0"]
test = false

[[example]]
name = "hydentity-runner"
path = "examples/host.rs"

[dependencies]
sdk = { workspace = true }
serde_json = "1.0"
serde = { version = "1.0", default-features = false, features = [
    "derive",
    "alloc",
] }
anyhow = "1.0.96"
borsh = { version = "1.5.5", features = ["derive"] }
hex = "0.4.3"

risc0-zkvm = { version = "1.2.4", default-features = false, optional = true, features = [
    'std',
] }
client-sdk = { workspace = true, features = ["risc0"], optional = true }
sha2 = "=0.10.8" # precompile patched at workspace root

[dev-dependencies]
# Activate client in examples.
sdk = { workspace = true, features = ["full-model", "tracing"] }
hyle-hydentity = { path = ".", features = ["client"] }
client-sdk = { workspace = true, features = ["risc0", "rest", "indexer"] }

clap = { version = "4.5", features = ["derive"] }
tokio = { version = "1.42.0", features = ["full", "tracing"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[features]
default = []
client = ["dep:client-sdk"]
risc0 = ["dep:risc0-zkvm", "sdk/risc0"]
